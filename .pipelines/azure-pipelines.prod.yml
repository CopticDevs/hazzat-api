trigger:
- master

pr:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
  # Azure Key Vault
  # Download Azure Key Vault secrets
  - task: AzureKeyVault@1
    inputs:
      azureSubscription: 'hazzat-api - Azure'
      keyVaultName: 'hazzat-api'
      secretsFilter: 'hazzat-db-ro-connectionString'

  - task: NodeTool@0
    inputs:
      versionSpec: '14.x'
    displayName: 'Install Node.js'

  - task: Npm@1
    displayName: 'npm install'
    inputs:
      command: custom
      workingDir: src
      verbose: false
      customCommand: 'install'

  - task: Npm@1
    displayName: 'npm build'
    inputs:
      command: custom
      workingDir: src
      verbose: false
      customCommand: 'run build'

  - task: Npm@1
    displayName: 'Unit Tests'
    inputs:
      command: custom
      workingDir: src
      verbose: false
      customCommand: 'run test-unit'

  - task: Npm@1
    displayName: 'Integration Tests'
    inputs:
      command: custom
      workingDir: src
      verbose: false
      customCommand: 'run test-int'
    env:
      CUSTOMCONNSTR_DBCONNECTIONSTRING: $(hazzat-db-ro-connectionString)

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: 'VSTest'
      testResultsFiles: '**/testResults*.trx'
      failTaskOnFailedTests: false

  - script: |
      echo "Creating deployment archive file $ARCHIVE_FILE_PATH"
      cd src
      zip -r $ARCHIVE_FILE_PATH dist/ node_modules/ package.json
    displayName: 'Generate Deployment Archive'
    env:
      ARCHIVE_FILE_PATH: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      ENLISTMENT_ROOT: $(System.DefaultWorkingDirectory)

  - task: PublishPipelineArtifact@1
    displayName: 'Publish Artifact: drop'
    inputs:
      path: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
      artifact: HazzatBuildProd
